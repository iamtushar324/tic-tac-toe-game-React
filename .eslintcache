[{"/Users/tushar/web_dev/projects/tic-tac-game/src/index.js":"1","/Users/tushar/web_dev/projects/tic-tac-game/src/Game.js":"2"},{"size":223,"mtime":1608663065068,"results":"3","hashOfConfig":"4"},{"size":6544,"mtime":1608917367045,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1j5fyt1",{"filePath":"9","messages":"10","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/tushar/web_dev/projects/tic-tac-game/src/index.js",[],["12","13"],"/Users/tushar/web_dev/projects/tic-tac-game/src/Game.js",["14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst rowStyle = {\n  display: 'flex'\n}\n\nconst squareStyle = {\n  'width':'60px',\n  'height':'60px',\n  'backgroundColor': '#bbb',\n  'margin': '4px',\n  'display': 'flex',\n  'justifyContent': 'center',\n  'alignItems': 'center',\n  'fontSize': '20px',\n  'color': 'white',\n  'cursor':'pointer',\n  'border-radius':'10px',\n}\n\nconst boardStyle = {\n  'backgroundColor': '#eee',\n  'width': '208px',\n  'alignItems': 'center',\n  'justifyContent': 'center',\n  'display': 'flex',\n  'flexDirection': 'column',\n  'border': '3px #eee solid'\n}\n\nconst containerStyle = {\n  'display': 'flex',\n  'alignItems': 'center',\n  'flexDirection': 'column'\n}\n\nconst instructionsStyle = {\n  'marginTop': '5px',\n  'marginBottom': '5px',\n  'fontWeight': 'bold',\n  'fontSize': '16px',\n}\n\nconst buttonStyle = {\n  'marginTop': '15px',\n  'marginBottom': '16px',\n  'width': '80px',\n  'height': '40px',\n  'backgroundColor': '#8acaca',\n  'color': 'white',\n  'fontSize': '16px',\n}\n\nclass Square extends React.Component {\n  \n  render() {\n    const x = this.props.pos[0]\n    const y = this.props.pos[1]\n    return (\n      <div\n        className=\"square\"\n        style={squareStyle} onClick={()=>{this.props.updateValue(this.props.pos)}} >\n        {this.props.arr[x][y]==1 &&\"X\"}\n        {this.props.arr[x][y]==0 && \"O\"}\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  \nupdateValue = async ([x,y]) =>{\n  if(this.state.currentPlayer==2){return}\n  if(this.state.arr[x][y]!=2){return}\n  if(this.state.winner != 'None'){return}\n\n  let tempArr = this.state.arr\n  tempArr[x][y] = this.state.currentPlayer;\n  await this.setState({arr:tempArr , currentPlayer:this.state.currentPlayer==0 ? 1 :0})\n  let winner =  this.checkForWinner(tempArr)\n        if(winner == 1){\n        this.setState({winner:'X'})\n        }\n        if(winner == 0){\n        this.setState({winner:'O'})\n        }\n        \n  if(this.state.currentPlayer==0){\n  this.computerMove(tempArr)\n  }\n}\n\nreset = () =>{\n  let tempArr = [[2,2,2],[2,2,2],[2,2,2]]\n  this.setState({arr:tempArr , currentPlayer:1 , winner:\"None\"})\n}\n\ncheckForWinner =(arr)=>{\n  let x = false;\n  let o = false;\n  for(let i = 0 ; i <= 2 ; i++){\n    let xx = true;\n    let oo = true;\n    for(let j = 0 ; j <= 2 ; j++){\n      if(arr[i][j]!=0 ) oo=false;\n      if(arr[i][j]!=1 ) xx=false;\n     }\n    if(xx){return 1}\n    if(oo){return 0}\n  }\n  for(let i = 0 ; i <= 2 ; i++){\n    let xx = true;\n    let oo = true;\n    for(let j = 0 ; j <= 2 ; j++){\n     \n      if(arr[j][i]!=0 ) oo=false;\n      if(arr[j][i]!=1 ) xx=false;\n     }\n    if(xx){return 1}\n    if(oo){return 0}\n  }\n  \n   let xx = true;\n    let oo = true;\n    for(let j = 0 ; j <= 2 ; j++){\n     \n      if(arr[j][j]!=0 ) oo=false;\n      if(arr[j][j]!=1 ) xx=false;\n     }\n    if(xx){return 1}\n    if(oo){return 0}\n  \n    xx = true;\n    oo = true;\n\n   for(let j = 0 ; j <= 2 ; j++){\n     \n      if(arr[j][2-j]!=0 ) oo=false;\n      if(arr[j][2-j]!=1 ) xx=false;\n     }\n    if(xx){return 1}\n    if(oo){return 0}\n    return -1\n}\n\n\n\n  computerMove = (arr)=>{\n        let currentPlayer = this.state.currentPlayer\n    let allPossibleOutcomesResult = [[-2,-2,-2],[-2,-2,-2],[-2,-2,-2]]\n    for(let row = 0 ; row < 3 ; row++){\n      for (let column = 0 ; column < 3 ; column++){\n        if(arr[row][column]==2){\n          let nextArr = [[...arr[0]],[...arr[1]],[...arr[2]]];\n          nextArr[row][column] = currentPlayer ? 0:1;\n          let checkForWinner = this.checkForWinner(nextArr)\n          if(checkForWinner==0){\n            allPossibleOutcomesResult[row][column] = 1\n          }\n          else if(checkForWinner==1){\n            allPossibleOutcomesResult[row][column] = 0\n          }\n          else {\n            allPossibleOutcomesResult[row][column] = -1;\n          }\n        }\n      }\n    }\n    let maxIndex = {row:0,column:0}\n\n    for(let row = 0 ; row < 3 ; row++){\n      for (let column = 0 ; column < 3 ; column++){\n          if(allPossibleOutcomesResult[row][column]>allPossibleOutcomesResult[maxIndex.row][maxIndex.column]){\n            maxIndex.row = row;\n            maxIndex.column = column;\n          }\n        }}\n        if(arr[maxIndex.row][maxIndex.column]== 2){\n        arr[maxIndex.row][maxIndex.column] = currentPlayer ? 1:0;\n        this.setState({arr:arr, currentPlayer:currentPlayer==0 ? 1 :0})\n      }\n\n        }\n\n\n  constructor(props){\n    super(props)\n    this.state = {\n      currentPlayer:1,\n      arr:[[2,2,2],[2,2,2],[2,2,2]],\n      winner:\"None\"\n    }\n  }\n  \n  \n  render() {\n    return (\n      <div style={containerStyle} className=\"gameBoard\">\n        <div className=\"status\" style={instructionsStyle}>Next player: {this.state.currentPlayer==0?\"O\":\"X\"}</div>\n        <div className=\"winner\" style={instructionsStyle}>Winner: {this.state.winner}</div>\n        <button style={buttonStyle} onClick={this.reset}>Reset</button>\n        <div style={boardStyle}>\n          <div className=\"board-row\" style={rowStyle}>\n            <Square arr={this.state.arr} currentPlayer={this.state.currentPlayer} updateValue={this.updateValue} pos={[0,0]} />\n            <Square arr={this.state.arr} currentPlayer={this.state.currentPlayer} updateValue={this.updateValue} pos={[0,1]} />\n            <Square arr={this.state.arr} currentPlayer={this.state.currentPlayer} updateValue={this.updateValue} pos={[0,2]} />\n          </div>\n          <div className=\"board-row\" style={rowStyle}>\n            <Square arr={this.state.arr} currentPlayer={this.state.currentPlayer}  updateValue={this.updateValue} pos={[1,0]} />\n            <Square arr={this.state.arr} currentPlayer={this.state.currentPlayer}  updateValue={this.updateValue} pos={[1,1]} />\n            <Square arr={this.state.arr} currentPlayer={this.state.currentPlayer}  updateValue={this.updateValue} pos={[1,2]}/>\n          </div>\n          <div className=\"board-row\" style={rowStyle}>\n            <Square arr={this.state.arr} currentPlayer={this.state.currentPlayer}  updateValue={this.updateValue} pos={[2,0]} />\n            <Square arr={this.state.arr} currentPlayer={this.state.currentPlayer}  updateValue={this.updateValue} pos={[2,1]}/>\n            <Square arr={this.state.arr} currentPlayer={this.state.currentPlayer}  updateValue={this.updateValue} pos={[2,2]}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"50","severity":1,"message":"51","line":64,"column":30,"nodeType":"52","messageId":"53","endLine":64,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":65,"column":30,"nodeType":"52","messageId":"53","endLine":65,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":74,"column":30,"nodeType":"52","messageId":"53","endLine":74,"endColumn":32},{"ruleId":"50","severity":1,"message":"54","line":75,"column":26,"nodeType":"52","messageId":"53","endLine":75,"endColumn":28},{"ruleId":"50","severity":1,"message":"54","line":76,"column":24,"nodeType":"52","messageId":"53","endLine":76,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":80,"column":76,"nodeType":"52","messageId":"53","endLine":80,"endColumn":78},{"ruleId":"50","severity":1,"message":"51","line":82,"column":19,"nodeType":"52","messageId":"53","endLine":82,"endColumn":21},{"ruleId":"50","severity":1,"message":"51","line":85,"column":19,"nodeType":"52","messageId":"53","endLine":85,"endColumn":21},{"ruleId":"50","severity":1,"message":"51","line":89,"column":30,"nodeType":"52","messageId":"53","endLine":89,"endColumn":32},{"ruleId":"45","severity":1,"message":"55","line":100,"column":7,"nodeType":"47","messageId":"48","endLine":100,"endColumn":8},{"ruleId":"45","severity":1,"message":"56","line":101,"column":7,"nodeType":"47","messageId":"48","endLine":101,"endColumn":8},{"ruleId":"50","severity":1,"message":"54","line":106,"column":19,"nodeType":"52","messageId":"53","endLine":106,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":107,"column":19,"nodeType":"52","messageId":"53","endLine":107,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":117,"column":19,"nodeType":"52","messageId":"53","endLine":117,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":118,"column":19,"nodeType":"52","messageId":"53","endLine":118,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":128,"column":19,"nodeType":"52","messageId":"53","endLine":128,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":129,"column":19,"nodeType":"52","messageId":"53","endLine":129,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":139,"column":21,"nodeType":"52","messageId":"53","endLine":139,"endColumn":23},{"ruleId":"50","severity":1,"message":"54","line":140,"column":21,"nodeType":"52","messageId":"53","endLine":140,"endColumn":23},{"ruleId":"50","severity":1,"message":"51","line":154,"column":28,"nodeType":"52","messageId":"53","endLine":154,"endColumn":30},{"ruleId":"50","severity":1,"message":"51","line":158,"column":28,"nodeType":"52","messageId":"53","endLine":158,"endColumn":30},{"ruleId":"50","severity":1,"message":"51","line":161,"column":33,"nodeType":"52","messageId":"53","endLine":161,"endColumn":35},{"ruleId":"50","severity":1,"message":"51","line":179,"column":46,"nodeType":"52","messageId":"53","endLine":179,"endColumn":48},{"ruleId":"50","severity":1,"message":"51","line":181,"column":60,"nodeType":"52","messageId":"53","endLine":181,"endColumn":62},{"ruleId":"50","severity":1,"message":"51","line":200,"column":97,"nodeType":"52","messageId":"53","endLine":200,"endColumn":99},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'x' is assigned a value but never used.","'o' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]